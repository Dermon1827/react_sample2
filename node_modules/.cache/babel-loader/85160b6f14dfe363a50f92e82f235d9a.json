{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harud\\\\sample2\\\\src\\\\components\\\\Game.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Board } from \"./Board\";\nimport { useGameControl } from \"../hooks/useGameControl\";\nimport { calculateWinner } from \"../utils/calculateWinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Game = () => {\n  _s();\n\n  const {\n    history,\n    stepNumber,\n    xIsNext,\n    colAndRows,\n    reverseFlg,\n    handleClickSquare,\n    jumpToPast,\n    reverseHistoryInf\n  } = useGameControl();\n\n  const handleClick = i => handleClickSquare(i);\n\n  const jumpTo = step => jumpToPast(step);\n\n  const current = history[stepNumber];\n  let winner = calculateWinner(current.squares);\n  const boldStyles = {\n    fontWeight: 700\n  };\n  const reverseArr = [];\n\n  for (let i = history.length - 1; i >= 0; i--) {\n    reverseArr.push(i);\n  }\n\n  const moves = history.map((step, move) => {\n    let number = reverseFlg ? reverseArr[move] : move;\n    const desc = reverseFlg === false && move || reverseFlg && move !== history.length - 1 ? `Go to move #${number}(${colAndRows[number - 1][0]}, ${colAndRows[number - 1][1]})` : 'Go to game start';\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: number === stepNumber ? /*#__PURE__*/_jsxDEV(\"button\", {\n        style: boldStyles,\n        children: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 34\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(number),\n        children: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  });\n  let status;\n\n  if (winner === null) {\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n    winner = [];\n  } else if (winner[0] === 10) {\n    status = \"Draw\";\n    winner = [];\n  } else {\n    status = \"Winner: \" + current.squares[winner[0]];\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        squares: current.squares,\n        onClick: i => handleClick(i),\n        winRow: winner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: reverseHistoryInf,\n        children: \"Reverse History Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Game, \"HB95hpP2AxUSUniSDnZ67E2NXbs=\", false, function () {\n  return [useGameControl];\n});\n\n_c = Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["C:/Users/harud/sample2/src/components/Game.tsx"],"names":["React","Board","useGameControl","calculateWinner","Game","history","stepNumber","xIsNext","colAndRows","reverseFlg","handleClickSquare","jumpToPast","reverseHistoryInf","handleClick","i","jumpTo","step","current","winner","squares","boldStyles","fontWeight","reverseArr","length","push","moves","map","move","number","desc","status"],"mappings":"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","sourcesContent":["import React, {VFC} from 'react';\r\nimport {Board} from \"./Board\";\r\nimport {useGameControl} from \"../hooks/useGameControl\";\r\nimport {calculateWinner} from \"../utils/calculateWinner\";\r\n\r\nexport const Game: VFC = () =>  {\r\n\r\n  const {history, stepNumber, xIsNext, colAndRows, reverseFlg, handleClickSquare, jumpToPast, reverseHistoryInf} = useGameControl();\r\n\r\n  const handleClick = (i: number) => handleClickSquare(i);\r\n\r\n  const jumpTo = (step: number) => jumpToPast(step);\r\n\r\n  const current = history[stepNumber];\r\n  let winner = calculateWinner(current.squares);\r\n\r\n  const boldStyles = {\r\n    fontWeight: 700\r\n  };\r\n\r\n  const reverseArr: Array<number> = [];\r\n  for(let i=history.length -1; i >= 0; i--){\r\n    reverseArr.push(i);\r\n  }\r\n\r\n  const moves = history.map((step, move) => {\r\n\r\n    let number = reverseFlg ? reverseArr[move] : move;\r\n\r\n    const desc =  (reverseFlg === false && move) || (reverseFlg && move !== history.length -1) ?\r\n      `Go to move #${number}(${colAndRows[number - 1][0]}, ${colAndRows[number - 1][1]})`:\r\n      'Go to game start';\r\n    return (\r\n      <li key={move}>\r\n        {number === stepNumber ? <button style={boldStyles}>{desc}</button> :\r\n        <button onClick={() => jumpTo(number)}>{desc}</button>\r\n        }\r\n      </li>\r\n    );\r\n  });\r\n\r\n  let status;\r\n  if(winner === null){\r\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\r\n    winner = [];\r\n  } else if(winner[0] === 10){\r\n    status = \"Draw\";\r\n    winner = [];\r\n  }else {\r\n    status = \"Winner: \" + current.squares[winner[0]];\r\n  }\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <div className=\"game-board\">\r\n        <Board\r\n          squares={current.squares}\r\n          onClick={i => handleClick(i)}\r\n          winRow={winner}\r\n        />\r\n      </div>\r\n      <div className=\"game-info\">\r\n        <div>{status}</div>\r\n        <ol>{moves}</ol>\r\n        <button onClick={reverseHistoryInf}>Reverse History Order</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}