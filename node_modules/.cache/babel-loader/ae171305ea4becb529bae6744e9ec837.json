{"ast":null,"code":"export const calculateWinner = squares => {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return [a, b, c];\n    }\n  }\n\n  for (let i = 0; i < squares.length; i++) {\n    if (!squares[i]) {\n      return null;\n    }\n  }\n\n  return [10];\n};","map":{"version":3,"sources":["C:/Users/harud/sample2/src/utils/calculateWinner.ts"],"names":["calculateWinner","squares","lines","i","length","a","b","c"],"mappings":"AAEA,OAAO,MAAMA,eAAe,GAAIC,OAAD,IAAmC;AAChE,QAAMC,KAAK,GAAG,CACZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADY,EAEZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFY,EAGZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHY,EAIZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJY,EAKZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALY,EAMZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANY,EAOZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPY,EAQZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARY,CAAd;;AAUA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,UAAM,CAACE,CAAD,EAAIC,CAAJ,EAAOC,CAAP,IAAYL,KAAK,CAACC,CAAD,CAAvB;;AACA,QAAIF,OAAO,CAACI,CAAD,CAAP,IAAcJ,OAAO,CAACI,CAAD,CAAP,KAAeJ,OAAO,CAACK,CAAD,CAApC,IAA2CL,OAAO,CAACI,CAAD,CAAP,KAAeJ,OAAO,CAACM,CAAD,CAArE,EAA0E;AACxE,aAAO,CAACF,CAAD,EAAGC,CAAH,EAAKC,CAAL,CAAP;AACD;AACF;;AACD,OAAK,IAAIJ,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGF,OAAO,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAsC;AACpC,QAAG,CAACF,OAAO,CAACE,CAAD,CAAX,EAAe;AACb,aAAO,IAAP;AACD;AACF;;AACD,SAAO,CAAC,EAAD,CAAP;AACD,CAvBM","sourcesContent":["import {oneSquareType} from \"../types/oneSquareType\";\r\n\r\nexport const calculateWinner = (squares: Array<oneSquareType>) => {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return [a,b,c];\r\n    }\r\n  }\r\n  for (let i=0; i < squares.length; i++){\r\n    if(!squares[i]){\r\n      return null\r\n    }\r\n  }\r\n  return [10]\r\n}\r\n"]},"metadata":{},"sourceType":"module"}