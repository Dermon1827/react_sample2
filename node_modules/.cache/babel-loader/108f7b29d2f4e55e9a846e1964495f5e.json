{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harud\\\\sample2\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `square ${props.isHighlight ? 'highlight' : ''}`,\n    onClick: () => props.onClick(),\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Square;\n\nclass Board extends React.Component {\n  renderSquare(i, isHighlight = false) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      isHighlight: isHighlight,\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Array(3).fill(0).map((row, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board-row\",\n          children: Array(3).fill(0).map((col, j) => {\n            return this.renderSquare(i * 3 + j, this.props.highlightCells.indexOf(i * 3 + j) !== -1);\n          })\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      xIsNext: true,\n      stepNumber: 0,\n      isAsc: true\n    };\n  }\n\n  toggleAsc() {\n    this.setState({\n      asc: !this.state.asc\n    });\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n        col: i % 3 + 1,\n        row: Math.floor(i / 3) + 1\n      }]),\n      xIsNext: !this.state.xIsNext,\n      stepNumber: history.length\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 ? false : true\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const settlement = calculateWinner(current.squares);\n    let status;\n\n    if (settlement) {\n      if (settlement.isDraw) {\n        status = 'Draw';\n      } else {\n        status = 'Winner: ' + settlement.winner;\n      }\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    const moves = history.map((step, move) => {\n      const desc = move ? 'Move #' + move + '(' + step.col + ',' + step.row + ')' : 'Game start';\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.jumpTo(move),\n          className: this.state.stepNumber === move ? 'bold' : '',\n          children: desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          onClick: i => this.handleClick(i),\n          highlightCells: settlement ? settlement.line : []\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.toggleAsc(),\n            children: \"ASC\\u21D4DESC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: this.state.asc ? moves : moves.reverse()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this);\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 135,\n  columnNumber: 3\n}, this), document.getElementById('container'));\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {\n        isDraw: false,\n        winner: squares[a],\n        line: [a, b, c]\n      };\n    }\n  }\n\n  if (squares.filter(e => !e).length === 0) {\n    return {\n      isDraw: true,\n      winner: null,\n      line: []\n    };\n  }\n\n  return null;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["C:/Users/harud/sample2/src/index.js"],"names":["React","ReactDOM","Square","props","isHighlight","onClick","value","Board","Component","renderSquare","i","squares","render","Array","fill","map","row","col","j","highlightCells","indexOf","Game","constructor","state","history","xIsNext","stepNumber","isAsc","toggleAsc","setState","asc","handleClick","slice","current","length","calculateWinner","concat","Math","floor","jumpTo","step","settlement","status","isDraw","winner","moves","move","desc","line","reverse","document","getElementById","lines","a","b","c","filter","e"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button className={`square ${props.isHighlight ? 'highlight' : ''}`} onClick={() => props.onClick()}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i, isHighlight = false) {\r\n    return <Square isHighlight={isHighlight} key={i} value={this.props.squares[i]} onClick={() => this.props.onClick(i)} />;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {\r\n          Array(3).fill(0).map((row, i) => {\r\n            return (\r\n              <div className=\"board-row\" key={i}>\r\n                {\r\n                  Array(3).fill(0).map((col, j) => {\r\n                    return(\r\n                      this.renderSquare(i * 3 + j, this.props.highlightCells.indexOf(i * 3 + j) !== -1)\r\n                    )\r\n                  })\r\n                }\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      history: [{\r\n        squares: Array(9).fill(null)\r\n      }],\r\n      xIsNext: true,\r\n      stepNumber: 0,\r\n      isAsc: true\r\n    };\r\n  }\r\n\r\n  toggleAsc() {\r\n    this.setState({\r\n      asc: !this.state.asc,\r\n    });\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    this.setState({\r\n      history: history.concat([{\r\n        squares: squares,\r\n        col: (i % 3) + 1,\r\n        row: Math.floor(i / 3) + 1,\r\n      }]),\r\n      xIsNext: !this.state.xIsNext,\r\n      stepNumber: history.length\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) ? false : true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const settlement = calculateWinner(current.squares);\r\n\r\n    let status;\r\n    if (settlement) {\r\n      if (settlement.isDraw) {\r\n        status = 'Draw';\r\n      } else {\r\n        status = 'Winner: ' + settlement.winner;\r\n      }\r\n    } else {\r\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n    }\r\n\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ?\r\n        'Move #' + move + '(' + step.col + ',' + step.row + ')':\r\n        'Game start';\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)} className={this.state.stepNumber === move ? 'bold' : '' } >{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            onClick={(i) => this.handleClick(i)}\r\n            highlightCells={settlement ? settlement.line : []}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <div><button onClick={() => this.toggleAsc()}>ASC⇔DESC</button></div>\r\n          <ol>{this.state.asc ? moves : moves.reverse()}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('container')\r\n);\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return {\r\n        isDraw: false,\r\n        winner: squares[a],\r\n        line: [a, b, c]\r\n      };\r\n    }\r\n  }\r\n  if (squares.filter((e) => !e).length === 0) {\r\n    return {\r\n      isDraw: true,\r\n      winner: null,\r\n      line: []\r\n    }\r\n  }\r\n  return null;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}